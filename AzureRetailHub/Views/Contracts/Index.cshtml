@model IEnumerable<AzureRetailHub.Models.FileDetailDto>

@{
    ViewData["Title"] = "Contracts";
    @* Add these lines to show success/error messages *@
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }
}

<style>
    .upload-box {
        border: 2px dashed #0d6efd;
        border-radius: .25rem;
        padding: 40px;
        text-align: center;
        cursor: pointer;
        background-color: #f8f9fa;
    }

        .upload-box.dragover {
            background-color: #e9ecef;
            border-color: #0b5ed7;
        }
</style>

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h1>Contracts</h1>
        <p class="text-muted">Manage your contracts and view details.</p>
    </div>
</div>

<div class="card mb-4">
    <div class="card-header">
        <h5>Upload New Contract</h5>
    </div>
    <div class="card-body">
        <form asp-action="Upload" method="post" enctype="multipart/form-data">
            <div id="uploadBox" class="upload-box">
                <p>Drag & drop your file here or</p>
                <input type="file" id="contractFile" name="contractFile" class="d-none" />
                <button type="button" id="browseBtn" class="btn btn-primary">Browse Files</button>
                <p id="fileName" class="mt-2"></p>
            </div>
            <div class="mt-3">
                <button type="submit" class="btn btn-success">Upload</button>
            </div>
        </form>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <h5>Uploaded Contracts</h5>
    </div>
    <div class="table-responsive">
        <table class="table table-hover mb-0">
            <thead>
                <tr>
                    <th>File Name</th>
                    <th>File Size</th>
                    <th>Date Uploaded</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>@((item.Size / 1024.0).ToString("F2")) KB</td>
                        <td>@item.UploadedOn?.ToString("yyyy-MM-dd HH:mm")</td>
                        <td>
                            <a asp-action="Download" asp-route-fileName="@item.Name">View</a> |
                            <a asp-action="Delete" asp-route-fileName="@item.Name">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const uploadBox = document.getElementById('uploadBox');
            const fileInput = document.getElementById('contractFile');
            const browseBtn = document.getElementById('browseBtn');
            const fileNameDisplay = document.getElementById('fileName');

            browseBtn.addEventListener('click', () => fileInput.click());
            uploadBox.addEventListener('click', () => fileInput.click());

            fileInput.addEventListener('change', () => {
                if (fileInput.files.length > 0) {
                    fileNameDisplay.textContent = `Selected file: ${fileInput.files[0].name}`;
                }
            });

            uploadBox.addEventListener('dragover', (e) => {
                e.preventDefault();
                uploadBox.classList.add('dragover');
            });

            uploadBox.addEventListener('dragleave', () => {
                uploadBox.classList.remove('dragover');
            });

            uploadBox.addEventListener('drop', (e) => {
                e.preventDefault();
                uploadBox.classList.remove('dragover');
                if (e.dataTransfer.files.length > 0) {
                    fileInput.files = e.dataTransfer.files;
                    fileNameDisplay.textContent = `Selected file: ${fileInput.files[0].name}`;
                }
            });
        });
    </script>
}